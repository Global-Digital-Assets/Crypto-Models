Crypto - Models
Connect to the Hetzner VPS

bash
CopyInsert in Terminal
ssh -i ~/.ssh/binance_futures_tool  root@37.27.200.41
ðŸ”‘ SSH Key
(same key used across all services â€“Â neverÂ commit)

CopyInsert
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
QyNTUxOQAAACCgKpg75l42bl6nqPGB19mhr3u/FvLqpVM+F6h83KfQngAAAKA5gORcOYDk
XAAAAAtzc2gtZWQyNTUxOQAAACCgKpg75l42bl6nqPGB19mhr3u/FvLqpVM+F6h83KfQng
AAAECVjT6ZU1OJy2CpOaaBDrABKwO/XHGsxASibDLcrTBy+qAqmDvmXjZuXqeo8YHX2aGv
e78W8uqlUz4XqHzcp9CeAAAAHWJpbmFuY2UtZnV0dXJlcy10b29sLTIwMjUwNjAx
-----END OPENSSH PRIVATE KEY-----

GitHub mirror |Â https://github.com/Global-Digital-Assets/Crypto-Models  Github token = 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
Crypto-Models â€‘ Project Brief
0. Access

bash
CopyInsert
# Production VPS (Hetzner, 8-core, 16 GB)
ssh -i ~/.ssh/binance_futures_tool root@37.27.200.41
â€¢ Source-of-truth repo (mirror/backup only):https://github.com/Global-Digital-Assets/Crypto-Modelsâ€¢ PAT:Â 
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Â (doÂ NOTÂ commit)


1. Scope & Objectives
1. Train, maintain, and serve multiple per-token or grouped models (long & short).
2. 30-day rolling window; emit buy / sell / neutral plus confidence & risk fields.
3. SitsÂ betweenÂ Data-API and ML-engine; scales to 5-10 new models / month.

2. End-to-End Data Flow


CopyInsert
Data-API â†’ crypto-models (N models) â†’ ML-engine (dispatcher) â†’ Analytics-API â†’ Futures-Bot
â€¢Â 
crypto-modelsÂ writes one JSON per model toÂ /root/crypto-models/signals/.
â€¢ ML-engine hasÂ inbox/Â symlinked to that folder and fuses signals viaÂ signal_dispatcher.pyÂ (highest-probability or custom rule).
â€¢ ResultingÂ latest_signals.jsonÂ isÂ unchanged, so Analytics & Bot need no edits.


3. Directory Layout (VPS)


CopyInsert
/root/crypto-models/
â”œâ”€ ingest/               # Data pulls from Data-API
â”œâ”€ features/             # Stateless feature builders
â”œâ”€ train/                # train.py <token|group> --mode long|short
â”œâ”€ infer/                # infer.py â†’ signals/*.json
â”œâ”€ dispatcher/           # (optional) in-service fusion
â”œâ”€ models/               # <strategy>/model.pkl + metadata.json
â”œâ”€ signals/              # *.json outputs (read-only to ML-engine)
/root/ml-engine/
â””â”€ inbox/ â†’ symlink to /root/crypto-models/signals

4. Model Lifecycle
| Step | Script | Timer | Notes | |------|--------|-------|-------| | Ingestion & feature build |Â 
ingest.pyÂ /Â features.pyÂ | ad-hoc (triggered by train) | Saves parquet underÂ /data/Â | | Training |Â train.pyÂ |Â crypto-models-train.timerÂ (02:30 UTC) | Daily incremental; full retrain Sun | | Inference |Â infer.pyÂ |Â crypto-models-infer.timerÂ (every 5 min) | Drops JSON signals |

All live models are listed inÂ 
registry.yaml; adding a model is a config change only.


5. Signal Schema (example)

jsonc
CopyInsert
{
  "timestamp": 1718123456,
  "model_id": "BTC_USDT_long_v2025-06-11",
  "signal": "buy",          // buy | sell | neutral
  "probability": 0.87,
  "target_price": 72750.5,
  "stop_loss": 69500.0,
  "expires_at": 1718209856
}

6. Systemd Units (/etc/systemd/system/)
| Unit | ExecStart | Schedule | |------|-----------|----------| |Â 
crypto-models-train.serviceÂ |Â venv/bin/python train/run_all.pyÂ | daily @ 02:30 | |Â crypto-models-infer.serviceÂ |Â venv/bin/python infer/run_all.pyÂ | every 5 min | |Â crypto-models-api.serviceÂ (optional)Â |Â uvicorn api:app --host 0.0.0.0 --port 8004Â | always |


7. Observability
Crypto-models


CopyInsert
cm_infer_latency_ms{model_id=â€¦}
cm_signal_count{model_id=â€¦,signal=buy}
ML-engine


CopyInsert
ml_dispatch_selected_total{signal=buy}
Prometheus scrapes ports 8004 (crypto-models API) and 9101 (ML-engine).

8. Deployment Checklist
1. git cloneÂ orÂ rsyncÂ repo intoÂ /root/crypto-models;Â python -m venv venv.
2. pip install -r requirements.txt.
3. Create symlink:bashCopyInsert in Terminalln -s /root/crypto-models/signals /root/ml-engine/inbox
4. systemctl daemon-reload && systemctl enable --now crypto-models-*.timer.
5. Verify:bashCopyInsert/root/crypto-models/venv/bin/python infer/infer.py --dry-run
6. jq '.' /root/crypto-models/signals/*.json | head
7. Watch Prometheus metrics & compare ML-engine dispatcher output for 24 h.
8. Flip Analytics config to trust newÂ latest_signals.json.

9. Incremental Roadmap
1. Prototype on BTC, ETH, SOL.
2. Shadow-run for 48 h.
3. Enable live mode; roll out to 20+ tokens.
4. Add short-only strategies & sector (group) models.
5. Monthly: retire worst-performing models, add 5-10 new ones.

Remember:Â VPS (37.27.200.41) is the single source of truth. Pushes to GitHub are CI backups only.You have my explicit approval to create, write, edit, read, save, move, delete, change any code or files on the hetzner server or my MacBook. 
